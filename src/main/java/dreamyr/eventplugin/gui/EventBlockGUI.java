package dreamyr.eventplugin.gui;

import dreamyr.eventplugin.EventPlugin;
import dreamyr.eventplugin.managers.EventBlockManager;
import dreamyr.eventplugin.util.ItemBuilder;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;

import java.util.*;

public class EventBlockGUI {
    private final EventPlugin plugin;
    private final EventBlockManager eventBlockManager;

    public EventBlockGUI(EventPlugin plugin) {
        this.plugin = plugin;
        this.eventBlockManager = plugin.getEventBlockManager();
    }

    public void openEventBlockGUI(Player player, String eventKey) {
        Inventory gui = Bukkit.createInventory(null, 27, "–Ü–≤–µ–Ω—Ç-–ë–ª–æ–∫: " + eventKey);

        // üü° –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ—Å—É—Ä—Å–∏ (—Å–ª–æ—Ç 10)
        Map<Material, Integer> required = eventBlockManager.getRequiredResources(eventKey);
        ItemStack progressItem = buildProgressItem(required, player);
        gui.setItem(10, progressItem);

        // ‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ (—Å–ª–æ—Ç 13)
        ItemStack confirm = new ItemBuilder(Material.LIME_CONCRETE)
                .setName("¬ßa–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è")
                .setLore("¬ß7–ù–∞—Ç–∏—Å–Ω–∏ —â–µ —Ä–∞–∑, —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏.")
                .build();
        gui.setItem(13, confirm);

        // üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ (—Å–ª–æ—Ç 16)
        ItemStack finish = new ItemBuilder(Material.RED_CONCRETE)
                .setName("¬ßc–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —ñ–≤–µ–Ω—Ç")
                .setLore("¬ß7–ü–æ—Ç—Ä–µ–±—É—î –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.")
                .build();
        gui.setItem(16, finish);

        // ‚öîÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –±–æ–π–æ–≤—É –∑–æ–Ω—É (—Å–ª–æ—Ç 22)
        ItemStack combatZone = new ItemBuilder(Material.IRON_SWORD)
                .setName("¬ße–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –±–æ–π–æ–≤—É –∑–æ–Ω—É")
                .setLore("¬ß7–ö–ª—ñ–∫–Ω–∏, —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∞–±–æ –∑–º—ñ–Ω–∏—Ç–∏.")
                .build();
        gui.setItem(22, combatZone);

        player.openInventory(gui);
    }

    public ItemStack buildProgressItem(Map<Material, Integer> requiredResources, Player player) {
        List<String> lore = new ArrayList<>();
        Map<Material, Integer> playerInventory = getPlayerInventorySummary(player);

        for (Map.Entry<Material, Integer> entry : requiredResources.entrySet()) {
            Material mat = entry.getKey();
            int required = entry.getValue();
            int collected = playerInventory.getOrDefault(mat, 0);

            String line = (collected >= required ? "¬ßa" : "¬ßc")
                    + mat.name() + ": " + collected + "/" + required;
            lore.add(line);
        }

        return new ItemBuilder(Material.CHEST)
                .setName("¬ße–†–µ—Å—É—Ä—Å–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è")
                .setLore(lore.toArray(new String[0]))
                .build();
    }

    private Map<Material, Integer> getPlayerInventorySummary(Player player) {
        Map<Material, Integer> result = new HashMap<>();
        for (ItemStack item : player.getInventory().getContents()) {
            if (item == null || item.getType() == Material.AIR) continue;
            result.put(item.getType(),
                    result.getOrDefault(item.getType(), 0)
                            + item.getAmount());
        }
        return result;
    }
}
